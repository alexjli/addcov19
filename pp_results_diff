Vanilla: Maximizing only 6LU7 logKa
SMILES: Cc1cccc(CNc2cc(Oc3ccccc3F)ncn2)n1, Predicted 1h4w logKa: 0.497914440774, Predicted 6LU7 logKa: 9.19367076294

Adj: Maximizing 6LU7 logKa, penalizing synthetic inaccesibility and large cycle sizes
SMILES: O=C(Nc1ccccc1C(=O)NCc1ccccn1)c1cccc(F)c1, Predicted 1h4w logKa: 0.230748253408, Predicted 6LU7 logKa: 8.04335142079

Diff: Maximize the difference between 6LU7 logKa and 1h4w logKa
SMILES: O=C(Nc1ccccc1NC(=O)c1ccc[nH]c1=O)c1cccc(F)c1, Predicted 1h4w logKa: 0.3799993577, Predicted 6LU7 logKa: 8.64397414281

Diff Adj: Maximizing the difference between 6LU7 logKa and 1h4w logKa, penalizing synthetic inaccesibility and large cycle sizes
SMILES: COc1ccc(F)cc1C(=O)Nc1cccc(Cn2cncn2)c1, Predicted 1h4w logKa: 0.213575131087, Predicted 6LU7 logKa: 8.04239271294

